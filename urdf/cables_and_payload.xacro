<?xml version="1.0"?>
<!--
  Author: Massimiliano Pandolfo

  Version 0.7
  payload_macro now receives two links as input, and acts as root node for the robot tree.
  With the exception of some minor improvements, this is supposed to be the final version before 1.0.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Properties -->
  <xacro:property name="cable_length" value="$(arg cable_length)" /> <!-- [m] -->
  <xacro:property name="cable_radius" value="$(arg cable_radius)" /> <!-- [m] -->
  <xacro:property name="cable_mass" value="$(arg cable_mass)" /> <!-- [kg] -->
  <xacro:property name="sphere_radius" value="$(arg cable_radius)" /> <!-- [m] -->
  <xacro:property name="sphere_mass" value="0.001" /> <!-- [kg] -->
  <xacro:property name="x_payload" value="$(arg x_payload)"/> <!-- [m] -->
  <xacro:property name="y_payload" value="$(arg y_payload)"/> <!-- [m] -->
  <xacro:property name="z_payload" value="$(arg z_payload)"/> <!-- [m] -->
  <xacro:property name="payload_mass" value="$(arg payload_mass)"/> <!-- [kg] -->


  <!-- Macro that creates a cuboid, used for the load -->
  <xacro:macro name="cuboid_macro" params="x y z mass">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${mass}"/>
        <inertia
        ixx="${mass*(y*y+z*z)/12}" ixy="0.0" ixz="0.0"
        iyy="${mass*(x*x+z*z)/12}" iyz="0.0"
        izz="${mass*(y*y+x*x)/12}"/>
    </inertial>
    <visual>
      <geometry>
        <box size="${x} ${y} ${z}"/>
      </geometry>
    </visual>
  </xacro:macro>


  <!-- Macro for the inertia tensor of the cable -->
  <xacro:macro name="cable_inertia_tensor" params="mass l">
    <inertia
      ixx="${mass * l * l / 12}" ixy="0.0" ixz="0.0"
      iyy="${mass * l * l / 12}" iyz="0.0"
      izz="0.0"/>
  </xacro:macro>


  <!-- Macro that connects a cable to a UAV -->
  <xacro:macro name="cable_macro"
    params="robot_namespace uav_body_frame id_number">

    <!--                              LINKS                              -->

    <!-- Auxiliary link between load (root node) and cable -->
    <link name="${robot_namespace}/aux_load">
      <inertial>
        <origin xyz="0 0 ${cable_length/2}" rpy="0 0 0"/>
        <mass value="0.001"/> <!-- CAN THIS BE MODIFIED TO A SMALLER VALUE WITHOUT CHANGING THE INERTIA? -->
        <xacro:cable_inertia_tensor mass="${cable_mass}" l="${cable_length}"/> 
      </inertial>
      <visual>
        <geometry>
          <sphere radius="${cable_radius}"/> 
        </geometry>
      </visual>
    </link>

    <!-- Cable link -->
    <link name="${robot_namespace}/cable">
      <inertial>
        <origin xyz="0 0 ${cable_length/2}" rpy="0 0 0"/>
        <mass value="${cable_mass}"/>
        <xacro:cable_inertia_tensor mass="${cable_mass}" l="${cable_length}"/> 
      </inertial>
      <visual>
        <origin xyz="0 0 ${cable_length/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${cable_length}" radius="${cable_radius}"/>
        </geometry>
      </visual>
    </link>

    <!-- Auxiliary link between cable and uav -->
    <link name="${robot_namespace}/aux_uav">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.001"/> <!-- CAN THIS BE MODIFIED TO A SMALLER VALUE WITHOUT CHANGING THE INERTIA? -->
        <inertia ixx="0.0347563" ixy="0.0" ixz="0.0" iyy="0.0458929" iyz="0.0" izz="0.0977" />
      </inertial>
      <visual>
        <geometry>
          <sphere radius="${cable_radius}"/> 
        </geometry>
      </visual>
    </link>


    <!--                             JOINTS                              -->

    <!-- Joint between aux_load and cable -->
    <joint name="${robot_namespace}/joint_load_x" type="continuous">

      <!-- Placing the joint ref frame in the center of the sphere -->
      <origin xyz="0 0 0" rpy="0 0 0" />

      <!-- Axis in the CHILD REFERENCE FRAME around which the rotation happens -->
      <axis xyz="1 0 0" />

      <parent link="${robot_namespace}/aux_load" />
      <child link="${robot_namespace}/cable" />

    </joint>


    <!-- Joint between the cable and aux_uav -->
    <joint name="${robot_namespace}/joint_uav_x" type="continuous">

      <!-- Placing the joint ref frame on the upper end of the cable -->
      <origin xyz="0 0 ${cable_length}" rpy="0 0 0" />

      <!-- Axis in the CHILD REFERENCE FRAME around which the rotation happens -->
      <axis xyz="1 0 0" />

      <parent link="${robot_namespace}/cable" />
      <child link="${robot_namespace}/aux_uav" />

    </joint>


    <!-- Joint between aux_uav and the body frame of the UAV -->
    <joint name="${robot_namespace}/joint_uav_y" type="continuous">

      <!-- Placing the joint ref frame in the center of the sphere -->
      <origin xyz="0 0 0" rpy="0 0 0" />

      <!-- Axis in the CHILD REFERENCE FRAME around which the rotation happens -->
      <axis xyz="0 1 0" />

      <parent link="${robot_namespace}/aux_uav" />
      <child link="${uav_body_frame}" />
    </joint>

  </xacro:macro>


  <xacro:macro name="payload_macro" params="robot_namespace_1 robot_namespace_2">

    <!--                              LINKS                              -->

    <!-- Payload link -->
    <link name="bar">
      <xacro:cuboid_macro x="${x_payload}" y="${y_payload}" z="${z_payload}" mass="${payload_mass}"/>
    </link>


    <!--                             JOINTS                              -->

    <!-- Joint connecting to the cable lifted by the first UAV -->
    <joint name="${robot_namespace_1}/joint_load_y" type="continuous">

      <!-- Placing the joint reference frame on one end of the bar -->
      <origin xyz="${x_payload/2} 0 ${z_payload/2 + sphere_radius}" rpy="0 0 0" />

      <!-- Axis in the CHILD REFERENCE FRAME around which the rotation happens -->
      <axis xyz="0 1 0" />

      <parent link="bar" />
      <child link="${robot_namespace_1}/aux_load" />
    </joint>


    <!-- Joint connecting to the cable lifted by the second UAV -->
    <joint name="${robot_namespace_2}/joint_load_y" type="continuous">

      <!-- Placing the joint reference frame on one end of the bar -->
      <origin xyz="${-x_payload/2} 0 ${z_payload/2 + sphere_radius}" rpy="0 0 0" />

      <!-- Axis in the CHILD REFERENCE FRAME around which the rotation happens -->
      <axis xyz="0 1 0" />

      <parent link="bar" />
      <child link="${robot_namespace_2}/aux_load" />
    </joint>

  </xacro:macro>

</robot>